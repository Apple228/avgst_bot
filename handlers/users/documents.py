import os

from aiogram import types
from aiogram.types import CallbackQuery, InputFile


from keyboards.inline.docs import docs, requisites, contract_Grishatkin, contract_Lifanov, price_tables_keyboard, \
    kp_keyboard
from loader import dp


@dp.message_handler(text="üìÑ–î–æ–∫—É–º–µ–Ω—Ç—ã")
async def document(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=docs)


@dp.message_handler(text="üìà–¢–∞–±–ª–∏—Ü—ã —Ü–µ–Ω")
async def document(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=price_tables_keyboard)


@dp.message_handler(text="üìä–ö–ü—à–∫–∏")
async def document(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=kp_keyboard)
@dp.callback_query_handler(text="–†–µ–∫–≤–∏–∑–∏—Ç—ã")
async def document(call: CallbackQuery):
    await call.message.edit_text(text="–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã")
    await call.message.edit_reply_markup(reply_markup=requisites)

@dp.callback_query_handler(text="–¶–µ–Ω—ã –¥–ª—è –ù–ù")
async def document(call: CallbackQuery):
    path1 = 'docs/–ò–Æ–õ–¨ 2023 –¥–æ–º–∞.xlsx'
    path2 = 'docs/–ò–Æ–õ–¨ 2023 –º–æ–¥—É–ª–∏.xlsx'
    await call.message.answer_document(document=types.InputFile(path1))
    await call.message.answer_document(document=types.InputFile(path2))

@dp.callback_query_handler(text="–¶–µ–Ω—ã –¥–ª—è –ú–°–ö")
async def document(call: CallbackQuery):
    path1 = 'docs/–ò–Æ–ù–¨ 2023 –¥–æ–º–∞ –ú–°–ö.xlsx'
    path2 = 'docs/–ò–Æ–ù–¨ 2023 –º–æ–¥—É–ª–∏ –ú–°–ö.xlsx'
    await call.message.answer_document(document=types.InputFile(path1))
    await call.message.answer_document(document=types.InputFile(path2))


@dp.callback_query_handler(text="–î–æ–≥–æ–≤–æ—Ä–∞ –ê–° –ö–∞—Ä–∫–∞—Å")
async def document(call: CallbackQuery):
    path = "docs/–î–æ–≥–æ–≤–æ—Ä–∞ –ê–° –ö–∞—Ä–∫–∞—Å"
    content = os.listdir(path)
    for file in content:
        await call.message.answer_document(document=types.InputFile(f"{path}/{file}"))

@dp.callback_query_handler(text="–î–æ–≥–æ–≤–æ—Ä–∞ –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥")
async def document(call: CallbackQuery):
    path = "docs/–î–æ–≥–æ–≤–æ—Ä–∞ –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥"
    content = os.listdir(path)
    for file in content:
        await call.message.answer_document(document=types.InputFile(f"{path}/{file}"))

@dp.callback_query_handler(text="–ö–ü—à–∫–∏ –¥–ª—è –ù–ù")
async def document(call: CallbackQuery):
    await call.message.answer("–ò—Ö –Ω–µ—Ç")
    path1 = ''
    path2 = ''
    # await call.message.answer_document(document=types.InputFile(path1))
    # await call.message.answer_document(document=types.InputFile(path2))


@dp.callback_query_handler(text="–ö–ü—à–∫–∏ –¥–ª—è –ú–°–ö")
async def document(call: CallbackQuery):
    path = "docs/–ö–ü—à–∫–∏ –ú–°–ö"
    content = os.listdir(path)
    for file in content:
        await call.message.answer_document(document=types.InputFile(f"{path}/{file}"))

@dp.callback_query_handler(text="–†–µ–∫–≤–∏–∑–∏—Ç—ã –ì—Ä–∏—à–∞—Ç–∫–∏–Ω")
async def document(call: CallbackQuery):
    path = 'docs/–ö–∞—Ä—Ç–æ—á–∫–∞_–û–û–û_–ê–≤–∞–Ω–≥–∞—Ä–¥_–°—Ç—Ä–æ–π_–ù–∏–∂–Ω–∏–π_–ù–æ–≤–≥–æ—Ä–æ–¥_–ü—Ä–∏–º—Å–æ—Ü–±–∞–Ω–∫.docx'
    await call.message.answer_document(document=types.InputFile(path))

@dp.callback_query_handler(text="–†–µ–∫–≤–∏–∑–∏—Ç—ã –ê–° –ö–∞—Ä–∫–∞—Å")
async def document(call: CallbackQuery):
    path = 'docs/–ö–∞—Ä—Ç–æ—á–∫–∞_–û–û–û –ê–° –ö–∞—Ä–∫–∞—Å.docx'
    await call.message.answer_document(document=types.InputFile(path))

@dp.callback_query_handler(text="–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ø–∫—É—â–µ–Ω–∫–æ")
async def document(call: CallbackQuery):
    path = 'docs/–ö–∞—Ä—Ç–æ—á–∫–∞_–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏_–ò–ü_–Ø–∫—É—â–µ–Ω–∫–æ.pdf'
    await call.message.answer_document(document=types.InputFile(path))

@dp.callback_query_handler(text="–†–µ–∫–≤–∏–∑–∏—Ç—ã –õ–∏—Ñ–∞–Ω–æ–≤")
async def document(call: CallbackQuery):
    path = 'docs/–ö–∞—Ä—Ç–æ—á–∫–∞ –û–û–û –ê–≤–∞–Ω–≥–∞—Ä–¥ —Å—Ç—Ä–æ–π –ù–ù.docx'
    await call.message.answer_document(document=types.InputFile(path))


@dp.callback_query_handler(text="–†–µ–≥–ª–∞–º–µ–Ω—Ç –û–ì–î")
async def document(call: CallbackQuery):
    path = 'docs/–†–µ–≥–ª–∞–º–µ–Ω—Ç –≤–µ–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞.docx'
    await call.message.answer_document(document=types.InputFile(path))







@dp.callback_query_handler(text="–ù–∞–∑–∞–¥ –≤ –¥–æ–∫—É–º–µ–Ω—Ç—ã")
async def document(call: CallbackQuery):
    await call.message.edit_text(text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª")
    await call.message.edit_reply_markup(reply_markup=docs)


